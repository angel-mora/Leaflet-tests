
Regionbound marker clustering FAQs
==================================

Why would I want it and how does it work?
-----------------------------------------
The regionbound.com home page and articles (top menu bar) explain it well.


Where can I find some quick demos?
----------------------------------
Start by opening the self-contained, fully-functional examples in the /examples
folder contained in the download. Just double-click the .html files one by one
and they'll open up in your browser. No server required.
You don't need anything else. The only external library required is the Leaflet
JS library and it is auto-downloaded by the code from a CDN near you.


I don't want to code, is this add-on supported in other systems?
----------------------------------------------------------------
Yes, in Drupal D7. Use this module: http://drupal.org/project/ip_geoloc.
Like Drupal itself, the module is free. All you need to do is copy the file
leaflet.markercluster-regionbound.min.js from your RegionBound download into the
sites/all/libraries/leaflet_markercluster/dist directory, so that it sits next
to the original, leaflet.markercluster.js
Then check the Status Report page, /admin/reports/status, for confirmation that
the file is in the right place. In the section "IP Geolocation Views & Maps,
Leaflet MarkerCluster library" it should say: "Installed with RegionBound
extension".
If you like the cluster colours from https://regionbound.com, then also copy the
the plugin's 3 dist/MarkerCluster*.css files into that same Drupal folder,
sites/all/libraries/leaflet_markercluster/dist.


I want to code my own solution. Where do I start?
-------------------------------------------------
When you're ready to get your hands dirty, study the javascript and comments
embedded in the HTML files from the /examples folder. You'll find it is easy to
create a Leaflet map, add markers and clustering. The code will also show you
how to add region information to your markers, so that the RegionBound
algorithm can do its thing.
Tips on how to create Leaflet maps and to add clustering can be found here:
http://leafletjs.com/examples.html
https://github.com/Leaflet/Leaflet.markercluster/blob/master/README.md


On which browsers does this work?
---------------------------------
Should work on all modern browsers, including Internet Explorer from IE6.


Where do I get support?
-----------------------
Drop us a line at regionbound@gmail.com quoting your purchase token.


Is this Open-Source software?
-----------------------------
No we're considering open-sourcing it. But for now this is proprietry software.
You must NOT copy this software beyond the limitations of the license you
agreed to when you purchased this software.


Explain the aggregation feature
-------------------------------
On each marker you may optionally set an aggregationValue. These values are
aggregated (e.g., summed or averaged) during clustering and the aggregated
result is displayed in the cluster icon, below the marker count. So if, your
locations represent recent sales, then each cluster will display the total sales
volume in the represented region.
Moreover the colour-coding of the clusters will be based not on the cluster
marker count, but on the cluster's aggregated value (sales). You can set 4
ranges representing small (green), medium (yellow), large (red) and xlarge
(pink).

How can I generate random locations to test with?
-------------------------------------------------
This free service is great: https://www.fakenamegenerator.com/order.php
This will generate street addresses as well as latitudes and longitudes for use
in your maps. It supports dozens of countries.
The data is sent to you in a spreadsheet. You can then edit this .csv file in
your favorite editor to turn it into a javascript locations array, as seen in
the examples. For instance, a handy VIM editor command to replace 
comma-quote-digits sequences by comma-space-digits in the next 1000 lines is

  :s/,"\(\d\)/, \1/g1000


What are clusters-of-one?
-------------------------
Clusters-of one are single markers displayed as a cluster icon with a count of
1 and an aggregation value, if defined.
The underlying single marker is revealed by clicking on the cluster.
Clusters-of-one provide consistency of look and consistency of information.
Check out https://regionbound.com/clusters-of-one for a demo and explanation.
You activate this behaviour via the allowClustersOfOne option, like so:

  var clusterOptions = { allowClustersOfOne: true };
  var clusterGroup = new L.MarkerClusterGroup(clusterOptions);
  
Have a play with the source code in examples/clustersof1.html. 
  
The option is also available in Drupal, via the Views UI of module IPGV&M.


How do I tune cluster behaviour?
--------------------------------
The main variables to play with are maxClusterRadius and regionLevels. 
If you use this add-on through Drupal, then you'll be able configure these
variables through the Drupal UI.
If you code your own solution, then you can pass these in the settings object
when your create your cluster group. You normally have one cluster group per
map:

  map = ...
  var clusterOptions = { maxClusterRadius: 130, regionLevels: regionLevels};
  var clusterGroup = new L.MarkerClusterGroup(clusterOptions);
  // Now add markers to the clusterGroup
  // ...
  map.addLayer(clusterGroup);

For the maxClusterRadius you would typically use a value greater than when
using standard clustering. Around 200 px tends to work well at the country and
province levels. If the focus of your application is on smaller regions, you may
want to reduce the maxClusterRadius.
The regionLevels array is also worth experimenting with. Here are some starting
points. Note that the granularity of postcodes differs from country to country.

Typical zoom ranges for Europe:
  country: 3 - 6
  province: 7 - 9
  city: 10 - 14
  postcode: 15 - 18

  var regionLevels =
    [ 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4 ];
  //           country...  province city.......... postcode..

Typical zoom ranges for US & Canada:
  country: 1 - 3
  state: 4 - 8
  city: 9 - 13
  zip: 14 - 18

Typical zoom ranges for Australia:
  country: 1 - 2
  state: 3 - 9
  city: 10 - 13
  suburb/postcode: 14 - 18


Can I temporarily fall back on the original behaviour?
------------------------------------------------------
Yes, either don't add regions to markers or pass in "regionLevels: []" as part
of the options to L.MarkerClusterGroup().


Can I make the plugin ignore proximity and respond to regions only?
-------------------------------------------------------------------
Yes, by setting maxClusterRadius to a big number, like 9999.


What if I don't want the tooltip to show all subregions?
--------------------------------------------------------
In the clusterOptions object that you pass to L.MarkerClusterGroup set 
addRegionToolTips:'without subregions', rather than addRegionToolTips:true.

  var clusterOptions = { addRegionToolTips:'without subregions' };
  new L.MarkerClusterGroup(clusterOptions)


What are some nice map tile providers?
--------------------------------------
Wikimedia
  Free but at times appears to be throttled on the number of tiles you can request.
  In your code use urlTemplate = 'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}@2x.png'

Thunderforest, thunderforest.com
  Choose from 9 styles of maps, shown at www.thunderforest.com/maps
  You need to request a free API KEY.
  Use urlTemplate = 'https://tile.thunderforest.com/landscape/{z}/{x}/{y}.png?apikey=YOUR-API-KEY'
  In the above template string you can replace "landscape" by another style, for
  instance "cycle", "transport", "outdoors", "pioneer", "mobile-atlas"...

Stamen
  Check out their watercolor, toner and burning maps at
  http://maps.stamen.com/#watercolor/12/37.7706/-122.3782

Esri, http://www.esri.com

MapQuest, http://mapquest.com

Google, https://googlemaps.com
  For instance for the common Google Road map use:
  var urlTemplate = 'https://mt{s}.googleapis.com/vt?&x={x}&y={y}&z={z}&style=high_dpi'
  
  For Google terrain map use:
  var urlTemplate = 'https://mt{s}.googleapis.com/vt?lyrs=t,r&x={x}&y={y}&z={z}&style=high_dpi'

  For any Google map you also need to specify the subdomains option to the 
  tileLayer:

  L.tileLayer(urlTemplate, {subdomains: [0, 1, 2, 3], attribution: attribution}).addTo(map);

With all of the above maps, don't forget to update the "attribution" string when
you decide to use these maps. It's only fair to give credit where credit is due.
Example:

  var attribution = 'Map data &copy; <a target="attr" href="https://googlemaps.com">Google</a>';
